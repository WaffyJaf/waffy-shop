generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  user_id    Int          @id @default(autoincrement())
  email      String       @unique(map: "email") @db.VarChar(255)
  password   String       @db.VarChar(255)
  name       String       @db.VarChar(255)
  role       user_role?   @default(USER)
  createdAt  DateTime?    @default(now()) @db.DateTime(0)
  cart_items cart_items[]
}

model categories {
  id_categories Int        @id @default(autoincrement())
  name          String     @db.VarChar(100)
  description   String?    @db.Text
  products      products[]
}

model products {
  id_products Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  description String?      @db.Text
  price       Decimal      @db.Decimal(10, 2)
  stock       Int?         @default(0)
  image_url   String?      @db.VarChar(500)
  category_id Int
  created_at  DateTime?    @default(now()) @db.DateTime(0)
  updated_at  DateTime?    @default(now()) @db.DateTime(0)
  is_active   Boolean?     @default(true)
  cart_items  cart_items[]
  categories  categories   @relation(fields: [category_id], references: [id_categories], onDelete: NoAction, onUpdate: NoAction, map: "products_ibfk_1")

  @@index([category_id], map: "category_id")
}

model cart_items {
  id         String    @id @default(uuid()) @db.Char(36)
  user_id    Int
  product_id Int
  quantity   Int       @default(1)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  products   products  @relation(fields: [product_id], references: [id_products], onDelete: Cascade, onUpdate: NoAction, map: "cart_items_ibfk_1")
  user       user      @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "cart_items_ibfk_2")

  @@index([product_id], map: "product_id")
  @@index([user_id], map: "user_id")
}

enum user_role {
  ADMIN
  USER
}
